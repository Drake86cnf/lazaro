<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BotonBackup.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>